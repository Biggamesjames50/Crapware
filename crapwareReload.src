hc=get_shell.host_computer
mx = include_lib("/lib/metaxploit.so")
crypto = include_lib("/lib/crypto.so")


if not mx then
	mx = include_lib(current_path+"/metaxploit.so")
	if not mx then
		exit("Please install metaxploit.so in /lib or in installation directory.")
	end if
end if


if not crypto then
	crypto = include_lib(current_path+"/crypto.so")
	if not crypto then
		exit("Please install crypto.so in /lib or in installation directory.")
	end if
end if




//graphics here






system_message = function(text)
	print("<color=#0080FF><b><u>CW:  "+text)
end function


system_message("\n<color=#0080FF>CRAPWARE is an open source project. For bug reports contact 'oof' at 1-800-EAT-SH*T\n")




	
	
	
	
	
	
	
	





HandleResult = function(result)
	print(typeof(result))
	
	if typeof(result) == "File" then 
		print(File.name)
		files = result.get_files + result.get_folders
		for file in files
			print(File.name + " " + File.owner)
		end for
	end if
	
	
	if typeof(result) == "computer" then 
		if result.File("/etc/passwd") then print(result.File("/etc/passwd").get_content)
	end if
	
	if typeof(result) == "shell" then
		connect = user_input("Open shell (y/n) ")
		if connect == "y" then result.start_terminal
	end if
	
end function


parse = function(result)
	found = 0
	List = []
	line = result.split(" ")
	line.reverse
	for word in line
		if found == 1 then
			word = word.remove(".")
			word = word.remove("<b>")
			word = word.remove("</b>")
			List.push(word)
			found = 0
		end if
		
		if found == 0 then
			if word == "Buffer" then
				found = 1
			end if
		end if
	end for
	
	return List
end function   






// scan function

remoteScan = function(ip,port)

router = get_router(ip)
ports = router.used_ports
for port in ports
	print(port.get_lan_ip + " " + port.port_number)
end for


TargetPort = user_input("port: ").to_int

net = mx.net_use(ip,TargetPort)
if not net then exit("connection failed")
Lib = net.dump_lib
print("Target Library: " + Lib.lib_name + " " + Lib.version)

Memories = mx.scan(Lib)
for memory in Memories
	print("<color=#2EFEF7>Scanning memory: " + memory)
	results = mx.scan_address(Lib,memory)
	for payload in parse(results)
		print(memory + " " + payload)
		result = Lib.overflow(memory,payload,"crap")
		if result then HandleResult(result)
		
	end for
end for

end function










usr_shell = function()
	print("\n<color=#2EFEF7>Type 'commands' for main menu\n")
	message = user_input("\n<color=#01DFD7><i>Cw: ")
	args = message.split(" ")
	
	
	if args[0] == "commands" then
		
		
		print("\n<color=yellow>			  RECON</color>\n")
		
		print("<color=#01DFD7>         nmap [ip]           well...its nmap !")
		
		
		
		
		
		print("\n<color=yellow>			  Penetration Commands.</color>\n")
		
		print("<color=#01DFD7>		scan [ip]         Scan libraries for vulnerabilities")
		print("<color=#01DFD7>		ra [lan]            Attack lan through the router")
		
		
		print("\n<color=yellow>			  Misc. Commands.</color>\n")
		
		print("<color=#01DFD7>		dec [hash]          Decipher tool ")
		print("<color=#01DFD7>		wifi                Wifi info")
		print("<color=#01DFD7>		router              Gets the routers local IP")
		print("<color=#01DFD7>      logs                Clear logs and delete<i> CRAPWARE")
		
	end if
	
	
	if args[0] == "scan" then
				remoteScan
	end if
	
	
	if args[0] == "ra" then
		lan = args[1]
		hackrouter(target_router.public_ip,lan)
	end if
	
	
	
	if args[0] == "wifi" then
		print("ESSID: "+target_router.essid_name)
		print("BSSID: "+target_router.bssid_name)
		crypto.airmon("start","eth0")
		networks = get_shell.host_computer.wifi_networks("wlan0")
		if networks.indexOf(target_router.essid_name) != null and networks.indexOf(target_router.bssid_name) != null then
			print("<color=green> This WIFI is in range!</color>")
		else
			print("Not in range.")
		end if
	end if
	
	
	if args[0] == "router" then
		print(target_router.local_ip)
	end if
	
	
	if args[0] == "dec" then
		
		filename = args[1]
		
		if filename != null then
			
			logins = filename.split("\n")
			for login in logins
				info = login.split(":")
				
				hash = info[1]
				got = crypto.decipher(hash)
				print(hash+"  "+got)
				
			end for
			
		end if
		
	end if
	
	
	if args[0] == "logs" then
		
		hc = get_shell.host_computer
		hc.File(program_path).delete
		hc.touch(home_dir,"system.log")
		log = hc.File(home_dir + "/system.log")
		log.move("/var")
		
		print("\n<color=green><b>Logs deleted")
		print("\n<color=#0080FF><b><i>'CRAPWARE' deleted")
		print("\n<color=#DA81F5><u>'Press Ctrl C' to exit\n")
	end if
	
	
	if args[0] == "exit" then 
		return 
	end if
	
	
	usr_shell
end function
usr_shell






















